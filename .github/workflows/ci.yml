name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test & Quality Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Type check
        run: pnpm run type-check

      - name: Lint check
        run: pnpm run lint:check

      - name: Build
        run: pnpm run build

      - name: Test build artifacts
        run: |
          # 测试CLI是否能正常运行
          node dist/cli.cjs --help
          # 测试基本功能
          mkdir -p test-temp/src
          echo 'console.log("测试中文");' > test-temp/src/test.js
          echo '{"locale": "zh-CN", "outputDir": "locales", "include": ["src/**/*.js"]}' > test-temp/i18n.config.json
          cd test-temp
          node ../dist/cli.cjs extract -c ./i18n.config.json || echo "Extract test completed"
          cd ..
          rm -rf test-temp

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Security audit
        run: pnpm audit --audit-level moderate

      - name: Check for vulnerabilities
        run: pnpm audit --audit-level high --json > audit-result.json || true

      - name: Upload audit results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-audit-results
          path: audit-result.json 